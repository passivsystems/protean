;; Sample API codex
;;
;; We call Protean Project/Service configurations codices
;; The sample codex illustrates much if not all of what is possible
;; with Protean
;;

{
  :includes [ "defaults.edn" ]

  :title "Pet Store API Docs"
  :doc "A sample pet store is often created in RESTful toolkits to demonstrate capability."

  :rsp {:headers {"Access-Control-Allow-Origin" "*"}}

  "petstore" {

    :types {
      :Status "(available|pending|sold)"
      :PetId "[0-9a-zA-Z]{3,7}"
    }
    :vars {
      "petId" {:type :PetId :doc "ID of pet" :gen false}
      "name" {:type :String :doc "Updated name of the pet" :examples ["tiddles"]}
      "status" {:type :Status :doc "Updated status of the pet"}
    }

    "api/pet" {

      :get {
        :doc "Finds all pets, or pets filtered by status or tags"
        :req {
          :query-params {:optional {"status" "${status}" "tags" "${tags}"}}
        }
        :vars {"tags" {:type :String :doc "Tags to filter by" :examples ["dog"]}}
      }

      :put {
        :description "Full description for update an existing pet"
        :doc "Update an existing pet"
        :rsp {
          :200 {
            ;; no need for a header, it is derived from the body file
            :body-example ["test-data/content/doc/responses/simple/200-ref.json"]
          }
          :400 {:doc "Pet not found"}
          :404 {:doc "Invalid ID supplied"}
          :405 {
            :doc "Validation exception"
            ;; override the content type calculated from the file extension
            :headers {"Content-Type" "application/problem+json" "Content-Language" "en"}
            :body-example ["test-data/content/problems/bad-custom-domain-field.json"]
          }
        }
      }

      :post {
        :doc "Add a new pet to the store"
        :req {
          ; :body-schema is an optional addition for payload validation - either .json for json-schema, or .xsd for xml validation.
          :body-schema "test-data/schemas/pet.schema.json"
          :body-example ["test-data/content/doc/requests/new-pet.json"]
        }
        :rsp {
          :201 {
            :doc "Created"
            :headers {"Location" "/pet/${petId}"}
          }
          :405 {:doc "Validation exception"}
        }
      }

    }

    "api/pet/${petId}" {

      :post {
        :doc "Updates a pet in the store with form data"
        :req {
          :form-params {:required {"name" "${name}" "status" "${status}"}}
        }
        :rsp {
          :200 {:doc "Updated"}
          :405 {:doc "Validation exception"}
        }
      }

      :get {
        :doc "Find a pet by ID"

        :rsp {
          :200 {
            :body-schema  "test-data/schemas/pet.schema.json"
            :body-example ["test-data/content/doc/responses/simple/pet.json"]
          }
          :404 {:doc "Invalid ID supplied"}
          :405 {
            :doc "Validation exception"
            ;; override the content type calculated from the file extension
            :headers {"Content-Type" "application/problem+json" "Content-Language" "en"}
            :body-example ["test-data/content/problems/bad-custom-domain-field.json"]
          }
        }
      }

      :delete {
        :doc "Deletes a pet"
        :rsp {:404 {:doc "Invalid ID supplied"}}
      }

      :patch {
        :doc "Partial updates to a pet"
        :rsp {:404 {:doc "Invalid ID supplied"}}
      }

    }

    "api/uploadImage" {
      :post {
        :doc "uploads an image"
        :req {
          :query-params {:required {"additionalMetadata" "${additionalMetadata}"}}
;           {"file" {:type :File}} ; Binary?; Multipart?
        }
        :vars {"additionalMetadata" {:type :String, :doc "Additional data to pass to server"}}
      }
    }
  }
}
