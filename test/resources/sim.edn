;; A sample simulation codex
;;
;; Illustrates response body etc

{
  :includes [ "defaults.edn" ]

  "sim" {
    
    :types {
      :Status "(available|pending|sold)"
      :PetId "[0-9a-zA-Z]{3,7}"
    }
    :vars {
      "petId" {:type :PetId :doc "ID of pet" :gen false}
      "status" {:type :Status :doc "Updated status of the pet"}
    }

    "path1" {
      :get {
        :rsp {
          :body {
            "k1" "v1"
            "k2" "v2"
          }
        }
      }
    }

    "path-txt" {
      :get {
        :rsp {
          :headers {"Content-Type" "text/plain"}
          :body "plain text response"
        }
      }
    }

    "path-xml" {
      :get {
        :rsp {
          :headers {"Content-Type" "text/xml"}
          :body [:parent [:child {:type "xml"}]]
        }
      }
    }

    "status-override" {
      :get {
        :rsp {:204 {}}
      }
    }

    "complex-resource/${petId}" {
      :get {
        :rsp {
          :body {
            "k1" "v1"
            "k2" "v2"
          }
        }
      }
    }

    "complex-resource/${petId}/sub-resource/${status}" {
      :get {
        :rsp {
          :body {
            "k1" "v1"
            "k2" "v2"
          }
        }
      }
    }

    "full/query-params" {
      :get {
        :req {
          :headers {"Authorization" "token"}
          :query-params {:required {"blurb" "flibble"}}
        }
        :rsp {
          :body {
            "k1" "v1"
            "k2" "v2"
          }
        }
      }
    }

    "full/form-params" {
      :post {
        :req {
          :headers {"Authorization" "token"}
          :form-params {"k1" "v1"}
        }
        :rsp {
          :body {
            "k1" "v1"
            "k2" "v2"
          }
        }
      }
    }
  }
}
